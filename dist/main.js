(()=>{var e={28:(e,n,t)=>{"use strict";t.d(n,{Z:()=>u});var r=t(537),i=t.n(r),a=t(645),o=t.n(a),c=t(667),s=t.n(c),p=new URL(t(737),t.b),A=o()(i()),d=s()(p);A.push([e.id,`*{\n    margin: 0;\n    padding: 0;\n}\n\nsub{\n    font-size: 10px;\n}\n\nbody {\n    background-image: url(${d});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n    height: 100vh;\n}\n\n.head-cont{\n    display: flex;\n    justify-content: center;\n    padding: 1vh 0vw;\n    background-color: wheat;\n    margin-bottom: 5vh;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: fit-content;\n}\n\n.menu{\n    background-color: rgb(245, 222, 179, 0.7);\n    height: fit-content;\n    width: 75vw;\n    font-size: 25px;\n    padding: 15px;\n    margin-bottom: 10vh;\n}\n\n.menu h2{\n    display: flex;\n    justify-content: center;\n    padding-bottom: 25px;\n}\n\n.review-cont{\n    padding: 0px 10px;\n}\n\n.review-note{\n    font-size: 20px;\n}\n\n.review-author{\n    font-size: 15px;\n    font-style: italic;\n    padding-left: 40px;\n    padding-bottom: 10px;\n}\n\n.menu-item-cont{\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(auto-fit, minimax(150px, 1fr));\n    column-gap: 5vw;\n    row-gap: 5vh;\n}\n\n.menu-item{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n    text-align: center;\n    /*border: 2px solid red;*/ \n}\n\n.menu-item > img{ \n    height: min-content;\n    width: 13vw;\n}\n\n.menu-item.sect4 > div{\n    line-height: 0.4px;\n}\n\n.menu-item.sect1 > img{\n    height: fit-content;\n}\n\n.menu-item.sect7, .menu-item.sect8{\n    display: flex;\n    justify-content: flex-start;\n}\n\n.menu-item.sect7 > div, .menu-item.sect8 > div{\n    display: inline-block;\n    text-align: left;\n    height: fit-content;\n}\n\n.menu-item > div{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    gap: 2px;\n    padding: 8px;\n    width: 66%;\n    height: 10vh;\n}\n\n.foot-cont{\n    display: flex;\n    justify-content: center;\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    width: 100vw;\n    padding: 1vh 0vw;\n    background-color: wheat;\n}`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,yDAA2E;IAC3E,sBAAsB;IACtB,4BAA4B;IAC5B,kCAAkC;IAClC,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,yCAAyC;IACzC,mBAAmB;IACnB,WAAW;IACX,eAAe;IACf,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,kBAAkB;IAClB,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,yDAAyD;IACzD,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,SAAS;IACT,WAAW;IACX,kBAAkB;IAClB,yBAAyB;AAC7B;;AAEA;IACI,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,2BAA2B;AAC/B;;AAEA;IACI,qBAAqB;IACrB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,6BAA6B;IAC7B,QAAQ;IACR,YAAY;IACZ,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,OAAO;IACP,SAAS;IACT,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;AAC3B",sourcesContent:["*{\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nsub{\r\n    font-size: 10px;\r\n}\r\n\r\nbody {\r\n    background-image: url(../src/images/pablo-pacheco-D3Mag4BKqns-unsplash.jpg);\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    height: 100vh;\r\n}\r\n\r\n.head-cont{\r\n    display: flex;\r\n    justify-content: center;\r\n    padding: 1vh 0vw;\r\n    background-color: wheat;\r\n    margin-bottom: 5vh;\r\n}\r\n\r\n.main{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: fit-content;\r\n}\r\n\r\n.menu{\r\n    background-color: rgb(245, 222, 179, 0.7);\r\n    height: fit-content;\r\n    width: 75vw;\r\n    font-size: 25px;\r\n    padding: 15px;\r\n    margin-bottom: 10vh;\r\n}\r\n\r\n.menu h2{\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-bottom: 25px;\r\n}\r\n\r\n.review-cont{\r\n    padding: 0px 10px;\r\n}\r\n\r\n.review-note{\r\n    font-size: 20px;\r\n}\r\n\r\n.review-author{\r\n    font-size: 15px;\r\n    font-style: italic;\r\n    padding-left: 40px;\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.menu-item-cont{\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(auto-fit, minimax(150px, 1fr));\r\n    column-gap: 5vw;\r\n    row-gap: 5vh;\r\n}\r\n\r\n.menu-item{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n    /*border: 2px solid red;*/ \r\n}\r\n\r\n.menu-item > img{ \r\n    height: min-content;\r\n    width: 13vw;\r\n}\r\n\r\n.menu-item.sect4 > div{\r\n    line-height: 0.4px;\r\n}\r\n\r\n.menu-item.sect1 > img{\r\n    height: fit-content;\r\n}\r\n\r\n.menu-item.sect7, .menu-item.sect8{\r\n    display: flex;\r\n    justify-content: flex-start;\r\n}\r\n\r\n.menu-item.sect7 > div, .menu-item.sect8 > div{\r\n    display: inline-block;\r\n    text-align: left;\r\n    height: fit-content;\r\n}\r\n\r\n.menu-item > div{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    gap: 2px;\r\n    padding: 8px;\r\n    width: 66%;\r\n    height: 10vh;\r\n}\r\n\r\n.foot-cont{\r\n    display: flex;\r\n    justify-content: center;\r\n    position: fixed;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100vw;\r\n    padding: 1vh 0vw;\r\n    background-color: wheat;\r\n}"],sourceRoot:""}]);const u=A},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var p=0;p<e.length;p++){var A=[].concat(e[p]);r&&o[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),n.push(A))}},n}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},o=[],c=0;c<e.length;c++){var s=e[c],p=r.base?s[0]+r.base:s[0],A=a[p]||0,d="".concat(p," ").concat(A);a[p]=A+1;var u=t(d),l={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(l);else{var m=i(l,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var c=t(a[o]);n[c].references--}for(var s=r(e,i),p=0;p<a.length;p++){var A=t(a[p]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},481:(e,n,t)=>{var r={"./ceaser-salad.jpg":649,"./cheese-pizza.jpg":504,"./cheeseburger.jpg":238,"./chicken-tenders.jpg":319,"./mozzarella-sticks.jpg":659,"./pablo-pacheco-D3Mag4BKqns-unsplash.jpg":737,"./pepperoni-pizza.jpg":74};function i(e){var n=a(e);return t(n)}function a(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}i.keys=function(){return Object.keys(r)},i.resolve=a,e.exports=i,i.id=481},649:(e,n,t)=>{"use strict";e.exports=t.p+"d8e2f384c48144416516.jpg"},504:(e,n,t)=>{"use strict";e.exports=t.p+"d8301aef08c070660804.jpg"},238:(e,n,t)=>{"use strict";e.exports=t.p+"77c9f34df2fbfd7a9f05.jpg"},319:(e,n,t)=>{"use strict";e.exports=t.p+"f456e467b602ff0c05d0.jpg"},659:(e,n,t)=>{"use strict";e.exports=t.p+"dccbae8305bcd40a1c3d.jpg"},737:(e,n,t)=>{"use strict";e.exports=t.p+"15fc355a890529ae31f3.jpg"},74:(e,n,t)=>{"use strict";e.exports=t.p+"dc3fe48b6173632887de.jpg"}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!e;)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{"use strict";var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),o=t.n(a),c=t(565),s=t.n(c),p=t(216),A=t.n(p),d=t(589),u=t.n(d),l=t(28),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=o().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=A(),n()(l.Z,m),l.Z&&l.Z.locals&&l.Z.locals;var f=t(649),h=t(504),g=t(238),v=t(319),C=t(659),B=t(74);function b(e,n){let t=document.createElement("div");switch(n){case 1:t.innerHTML="<p>Pepperoni Pizza - hand-made with care</p><p>Price: $15.99</p>";break;case 2:t.innerHTML="<p>Cheese Pizza - using 2-month-old marble cheese found at the dumpster at Walmart</p><p>Price: $11.99</p>";break;case 3:t.innerHTML="<p>Cheeseburger - popular with our kid customers</p><p>Price: $9.99</p>";break;case 4:t.innerHTML='<p>Chicken Tenders <sub>not to be confused with our previous menu item, Deep-Fried Chicken Beaks, of which we are not allowed to sell anymore due to so-called "Health Concerns"</sup></p><p>Price: $8.49</p>';break;case 5:t.innerHTML="<p>Mozzarella Sticks</p><p>Price: $4.99</p>";break;case 6:t.innerHTML="<p>Caesar Salad</p><p>Price: $7.99</p>";break;case 7:t.innerHTML="<h3>Sides</h3><br /><p>Fries: $2.99</p><p>Garden Salad: $3.49</p><p>Onion Rings (old): $2.99</p><p>Onion Rings (fresh): $4.49</p>";break;case 8:t.innerHTML="<h3>Drinks</h3><br /><p>Water: $0.99</p><p>Diet Soda: $2.99</p><p>Soda: $3.49</p><p>Milkshake: $4.99</p>"}e.appendChild(t)}function I(e,n){let t=new Image;switch(n){case 1:t.src=B;break;case 2:t.src=h;break;case 3:t.src=g;break;case 4:t.src=v;break;case 5:t.src=C;break;case 6:t.src=f}e.appendChild(t)}t(481),function(){const e=document.getElementById("content"),n=document.createElement("div");n.className="head-cont";const t=document.createElement("h1");t.textContent="Jerry's Pizza",n.appendChild(t),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.className="foot-cont";const t=document.createElement("p");t.innerHTML='<p>Photo by <a href="https:unsplash.com/@pablopacheco_videografo?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Pablo Pacheco</a> on <a href="https://unsplash.com/images/food/pizza?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText">Unsplash</a></p>',n.appendChild(t),e.appendChild(n)}(),function(){const e=document.getElementById("content"),n=document.createElement("div");n.className="main";const t=document.createElement("div");t.className="menu";const r=document.createElement("h2");r.textContent="Customers are raving about Jerry's Pizza!";const i=document.createElement("div");i.className="review-cont",i.innerHTML="<p class='review-note'>I ate here and it was kinda alright</p>",i.innerHTML+="<p class='review-author'>-Tim Shim</p>",i.innerHTML+="<p class='review-note'>It's cheap...and that's about it</p>",i.innerHTML+="<p class='review-author'>-Doreen Meen</p>",i.innerHTML+="<p class='review-note'>At least I didn't get food poisoning</p>",i.innerHTML+="<p class='review-author'>-Tom Dom</p>",t.appendChild(r),t.appendChild(i),n.appendChild(t),e.appendChild(n),function(e){const n=document.createElement("h2");n.textContent="Menu";const t=document.createElement("div");t.className="menu-item-cont";for(let e=1;e<9;e++){let n=document.createElement("div");n.className="menu-item sect"+e,b(n,e),e<7&&I(n,e),t.appendChild(n)}e.appendChild(n),e.appendChild(t)}(t)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,